pipeline {
    agent any

    tools {
        maven 'localMaven'
        jdk "localJdk"
    }
    
    environment {
        WORKSPACE = "${env.WORKSPACE}"
    }
    
    stages {
        stage('Git checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/nelsonokunseri/Jenkins-CI-CD-Pipeline-Project-V1.git'
                
            }
        }
        
        stage('Build') {
            steps {
                sh 'mvn package'
                
            }
            
            post {
                success {
                    archiveArtifacts artifacts: '**/*.war', followSymlinks: false
                }
            }
        }
        
    stage('Unit Test'){
        steps {
            sh 'mvn test'
        
        }
    }
    stage('Integration Test'){
        steps {
          sh 'mvn verify -DskipUnitTests'
          
        }
    }
    stage ('Checkstyle Code Analysis'){
        steps {
            sh 'mvn checkstyle:checkstyle'
            
        }
        post {
            success {
                echo 'Generated Analysis Result'
            }
        }
        
    }
    
    stage ('SonarQube scan'){
        steps {
            
            withSonarQubeEnv('SonarQube') {
            sh '''
            mvn sonar:sonar \
           -Dsonar.projectKey=JavaWebApp \
           -Dsonar.host.url=http://172.31.25.65:9000 \
           -Dsonar.login=1a968db999c2181d0092538962415430ec15f632
            
            '''
        }
        
    }
    
    }
    
    stage ('Quality Gate'){
        steps {
            
         waitForQualityGate abortPipeline: true
    
      }
    
    }
    
    stage ('upload artifact to nexus'){
        steps {
            
         sh 'mvn clean deploy -DskipTests'
         
    
      }
    
    }
    
    
     
    stage('Deploy to DEV') {
      environment {
        HOSTS = "dev"
      }
      steps {
        sh 'ls'
        sh "ansible-playbook ${WORKSPACE}/deploy.yaml --extra-vars \"hosts=$HOSTS workspace_path=$WORKSPACE\""
      }
     }
     
     
    stage('Deploy to STAGE env') {
      environment {
        HOSTS = "stage"
      }
      steps {
        sh 'ls'
        sh "ansible-playbook ${WORKSPACE}/deploy.yaml --extra-vars \"hosts=$HOSTS workspace_path=$WORKSPACE\""
      }
     }
     
     
    
     stage('Approval') {
      steps {
        input('Do you want to proceed?')
      }
    } 
     
     
     
    stage('Deploy to PROD env') {
      environment {
        HOSTS = "prod"
      }
      steps {
        sh 'ls'
        sh "ansible-playbook ${WORKSPACE}/deploy.yaml --extra-vars \"hosts=$HOSTS workspace_path=$WORKSPACE\""
      }
      
     }
     
    
    
    }  
    
}
